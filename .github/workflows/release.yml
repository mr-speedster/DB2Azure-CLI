name: Publish DB2Azure-CLI distribution ðŸ“¦ to PyPI and GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install wheel
        python -m pip install --upgrade build

    - name: Build distribution ðŸ“¦
      run: python3 -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish DB2Azure-CLI distribution ðŸ“¦ to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/DB2Azure-CLI

    permissions:
      id-token: write

    steps:
    - name: Download all the distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution ðŸ“¦ to PyPI
      run: |
        python -m pip install --upgrade twine
        twine upload dist/*.tar.gz dist/*.whl
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  github-release:
    name: Sign distribution with Sigstore and upload to GitHub Release
    needs: publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download all the distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Sign the distributions with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: './dist/*.tar.gz ./dist/*.whl'

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release create "$GITHUB_REF_NAME" --repo "$GITHUB_REPOSITORY" --notes "We are excited to announce the release of a new version. We recommend upgrading to this version for improved functionality and performance. For more details, see the [documentation](README.md)"

    - name: Upload distribution assets to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release upload "$GITHUB_REF_NAME" dist/*.tar.gz dist/*.whl --repo "$GITHUB_REPOSITORY"